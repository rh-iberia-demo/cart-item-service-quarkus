# Global
quarkus.http.port=8080

quarkus.micrometer.export.json.enabled=true

quarkus.container-image.registry=quay.io
quarkus.container-image.group=rgordill
quarkus.container-image.name=cart-item-app
quarkus.container-image.tag=0.1-SNAPSHOT

quarkus.opentelemetry.enabled=true 

# Dev

%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=

%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:

%dev.quarkus.hibernate-orm.database.generation.create-schemas=true
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

%dev.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317  

# Prod

%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=password

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
%prod.quarkus.datasource.jdbc.url=jdbc:otel:postgresql://localhost:5432/postgres
#%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres

%prod.quarkus.hibernate-orm.database.generation.create-schemas=true
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

%prod.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector.openshift-operators.svc:4317  
